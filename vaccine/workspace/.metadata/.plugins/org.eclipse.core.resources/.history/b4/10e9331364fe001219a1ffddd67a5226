package com.example.smalli;

import java.io.BufferedWriter;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;

import com.example.service.LocalService;

import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;

public class MainActivity extends Activity {

	private Button startButton;
	private Button stopButton;
	private boolean connected = false;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		this.startButton = (Button) this.findViewById(R.id.button1);
		this.startButton.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				startLocalService();
			}
		});
		this.stopButton = (Button) this.findViewById(R.id.button2);
		this.stopButton.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				stopLocalService();
			}
		});
	}

	public void startLocalService() {
		Thread cThread = new Thread(new ClientThread());
        cThread.start();
		/*
		Intent serviceIntent = new Intent(this, LocalService.class);
		serviceIntent.setAction("com.example.smalli.service");
		startService(serviceIntent);
		*/
	}

	public void stopLocalService() {
		/*
		Intent serviceIntent = new Intent(this, LocalService.class);
		serviceIntent.setAction("com.example.smalli.service");
		stopService(serviceIntent);*/

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	public class ClientThread implements Runnable {

		public void run() {
			try {
				InetAddress serverAddr = InetAddress.getByName("192.168.111.128");
				Log.d("ClientActivity", "C: Connecting...");
				Socket socket = new Socket(serverAddr, 8887);
				connected = true;

				try {
					OutputStream os = socket.getOutputStream();
					ObjectOutputStream oos = new ObjectOutputStream(os);
					String to = new String("BLA");
					oos.writeObject(to);
					oos.writeObject(new String("another object from the client"));
					oos.close();
					os.close();
				} catch (Exception e) {
					Log.e("ClientActivity", "S: Error", e);
				}
				socket.close();
				Log.d("ClientActivity", "C: Closed.");
			} catch (Exception e) {
				Log.e("ClientActivity", "C: Error", e);
				connected = false;
			}
		}
	}

}
