package com.viris.gui;

import java.awt.Color;
import java.awt.Component;

import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;

import com.example.service.Serialized;
import com.example.service.SerializedMethod;
import com.example.service.SerializedObject;

public class CellRenderer extends DefaultTreeCellRenderer {
	
	
	
    /**
	 * 
	 */
	private static final long serialVersionUID = -1990832222640454792L;

	@Override
    public Color getBackgroundNonSelectionColor() {
   
    	return (null);
    }

    @Override
    public Color getBackgroundSelectionColor() {
        return super.getBackgroundSelectionColor();
    }

    @Override
    public Color getBackground() {
        return (null);
    }

    
    @Override
    public Component getTreeCellRendererComponent(final JTree tree, final Object value, final boolean sel, final boolean expanded, final boolean leaf, final int row, final boolean hasFocus) {
        final Component ret = super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);
        String toString = null;
        final DefaultMutableTreeNode node = ((DefaultMutableTreeNode) (value));
        
        Object object = node.getUserObject();
        if(object instanceof SerializedObject){
        	SerializedObject so = (SerializedObject) object;
        	toString= "FIELD: "+so.name+", VALUE: "+so.value+", TYPE: "+so.type+", REFERENCE: "+so.reference;
        	if(so.changed){
        		ret.setForeground(Color.RED);
        	} 
        }else if(object instanceof SerializedMethod){
        	this.setTextNonSelectionColor(Color.BLACK);
        	SerializedMethod sm = (SerializedMethod) object;
        	toString ="( ";
    		for (SerializedObject s : sm.params){
    			toString = toString+s.type+" ";
    		} 		
    		toString = toString+")";
    		toString =  "METHOD: "+sm.name+toString+", RETURN TYPE: "+sm.type;
        }
        else {
        	toString = object.toString();
        }
      
       
        this.setText(toString);
        return ret;
    }
}
